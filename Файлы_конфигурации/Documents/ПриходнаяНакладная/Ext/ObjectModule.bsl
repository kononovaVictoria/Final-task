//Вычисление СуммыДокумента перед записью
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Чтобы нельзя было поправить вручную сумму документа перед записью документа
	СуммаДокумента = Таблица.Итог("Сумма");
	
КонецПроцедуры

//Заполнение на основании ЗаказаПоставщику
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		 Возврат;
	КонецЕсли;
	 
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		// Заполнение шапки
		Договор         = ДанныеЗаполнения.Договор;
		Контрагент      = ДанныеЗаполнения.Контрагент;
		Организация     = ДанныеЗаполнения.Организация;
		Склад           = ДанныеЗаполнения.Склад;
		ЗаказПоставщику = ДанныеЗаполнения;
		СуммаДокумента  = ДанныеЗаполнения.СуммаДокумента;
		ОбъектОснование = ДанныеЗаполнения;
		Для Каждого ТекСтрокаТаблица Из ДанныеЗаполнения.Таблица Цикл
			НоваяСтрока                             = Таблица.Добавить();
			НоваяСтрока.ЕдиницыИзмерения            = ТекСтрокаТаблица.ЕдиницыИзмерения;
			НоваяСтрока.КоэффициентЕдиницыИзмерения = ТекСтрокаТаблица.КоэффициентЕдиницыИзмерения;
			НоваяСтрока.Количество                  = ТекСтрокаТаблица.Количество;
			НоваяСтрока.НаборСвойств                = ТекСтрокаТаблица.НаборСвойств;
			НоваяСтрока.Номенклатура                = ТекСтрокаТаблица.Номенклатура;
			НоваяСтрока.Сумма                       = ТекСтрокаТаблица.Сумма;
			НоваяСтрока.Цена                        = ТекСтрокаТаблица.Цена;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры	

//Движения по регистрам
Процедура ОбработкаПроведения(Отказ, Режим)
	
	//1.Очистка старых движений регистра
    Движения.ЗаказыПоставщикам.Очистить();
    Движения.ЗаказыПоставщикам.Записывать = Истина;
    Движения.Записать();
  
	
    //Движение в расход по регистру ЗаказыПоставщикам с контролем остатков
	Если ЗначениеЗаполнено(ЗаказПоставщику)  Тогда 
		
		 Запрос       = Новый Запрос;
		 Запрос.Текст = 
		 "ВЫБРАТЬ
		 |	ПриходнаяНакладнаяТовары.Номенклатура                   КАК Номенклатура,
		 |	ПриходнаяНакладнаяТовары.НаборСвойств                   КАК НаборСвойств,
		 |	СУММА(ПриходнаяНакладнаяТовары.Количество * ПриходнаяНакладнаяТовары.КоэффициентЕдиницыИзмерения) КАК Количество
		 |ПОМЕСТИТЬ ТоварыВПриходнойНакладной
		 |ИЗ
		 |	Документ.ПриходнаяНакладная.Таблица                     КАК ПриходнаяНакладнаяТовары
		 |ГДЕ
		 |	ПриходнаяНакладнаяТовары.Ссылка = &Ссылка
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	ПриходнаяНакладнаяТовары.Номенклатура,
		 |	ПриходнаяНакладнаяТовары.НаборСвойств
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ТоварыВПриходнойНакладной.Номенклатура                  КАК Номенклатура,
		 |	ТоварыВПриходнойНакладной.НаборСвойств                  КАК НаборСвойств,
		 |	ТоварыВПриходнойНакладной.Количество                    КАК Количество,
		 |	ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		 |	ЕСТЬNULL(ЗаказыПоставщикамОстатки.СуммаОстаток, 0)      КАК СуммаОстаток,
		 |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                  КАК ВидДвижения,
		 |	&ДатаДокумента                                          КАК Период,
		 |	&Организация                                            КАК Организация,
		 |	&Договор                                                КАК Договор,
		 |	&Контрагент                                             КАК Контрагент,
		 |	&Заказ                                                  КАК ЗаказПоставщику,
		 |	ВЫБОР
		 |		КОГДА ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0) = 0
		 |			ТОГДА 0
		 |		ИНАЧЕ ЕСТЬNULL(ЗаказыПоставщикамОстатки.СуммаОстаток, 0) * ТоварыВПриходнойНакладной.Количество / ЕСТЬNULL(ЗаказыПоставщикамОстатки.КоличествоОстаток, 0)
		 |	КОНЕЦ                                                   КАК Сумма
		 |ИЗ
		 |	ТоварыВПриходнойНакладной                               КАК ТоварыВПриходнойНакладной
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(
		 |				&ДатаДокумента,
		 |				ЗаказПоставщику = &Заказ
		 |					И Организация = &Организация)           КАК ЗаказыПоставщикамОстатки
		 |		ПО ТоварыВПриходнойНакладной.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
		 |			И ТоварыВПриходнойНакладной.НаборСвойств = ЗаказыПоставщикамОстатки.ВариантНоменклатуры";
		 
		 Запрос.УстановитьПараметр("Ссылка"             ,Ссылка );
		 Запрос.УстановитьПараметр("ДатаДокумента"      ,Дата); 
		 Запрос.УстановитьПараметр("Организация"        ,Организация);
		 Запрос.УстановитьПараметр("Заказ"              ,ЗаказПоставщику);
		 Запрос.УстановитьПараметр("Договор"            ,Договор);	
		 Запрос.УстановитьПараметр("Контрагент"         ,Контрагент);
		 
		 РезультатЗапросаВыборка = Запрос.Выполнить().Выбрать();
		 
		 //регистр Заказы поставщикам. Формируем движения по расходу с контролем остатков по заказу
		 Движения.ЗаказыПоставщикам.Записывать = Истина;
          
	     Пока РезультатЗапросаВыборка.Следующий() Цикл
 
			 Если РезультатЗапросаВыборка.Количество>РезультатЗапросаВыборка.КоличествоОстаток Тогда

				 Сообщить("Номенклатура <<" + РезультатЗапросаВыборка.Номенклатура + ">> с набором свойств <<"+РезультатЗапросаВыборка.НаборСвойств+">> превышает остаток по заказу! В документе: " + РезультатЗапросаВыборка.Количество + "усл.ед., остаток по текущему заказу: " + 
				 РезультатЗапросаВыборка.КоличествоОстаток + " усл. ед., не хватает: " + (РезультатЗапросаВыборка.Количество - РезультатЗапросаВыборка.КоличествоОстаток)+" усл.ед.");
				 Отказ = Истина;
				 Продолжить; //нельзя ставить Возврат; потому что ошибки могут быть в следующих строках Выборки
				             //А мы должны сообщить пользователю о всех случаях нехватки номенклатуры!
		     КонецЕсли;
	 
			 Движение                     = Движения.ЗаказыПоставщикам.Добавить();
		     ЗаполнитьЗначенияСвойств(Движение,РезультатЗапросаВыборка);
			 Движение.ВариантНоменклатуры = РезультатЗапросаВыборка.НаборСвойств;
		 
	     КонецЦикла;
				
	КонецЕсли;  //Конец Если ЗначениеЗаполнено(Заказ)  Тогда
	                                             
	                                             

	//Движение в приход по регистрам ОстаткиТоваровНаСкладах и ПартииТоваровНаСкладах. Без контроля остатков, потому что Приход
	//Движение в РегистрБухгалтерии.Управленческий
	Если НЕ Отказ Тогда
	
			Запрос       = Новый Запрос();
			Запрос.Текст = "ВЫБРАТЬ
			               |	ПриходнаяНакладнаяТовары.Номенклатура       КАК Номенклатура,
						   |	ПриходнаяНакладнаяТовары.НаборСвойств       КАК ВариантНоменклатуры,
			               |	ПриходнаяНакладнаяТовары.Сумма              КАК Сумма,
			               |	ПриходнаяНакладнаяТовары.Ссылка.Дата        КАК Период,
			               |	ПриходнаяНакладнаяТовары.Ссылка.Организация КАК Организация,
			               |	ПриходнаяНакладнаяТовары.Ссылка.Склад       КАК Склад,
			               |	ПриходнаяНакладнаяТовары.КоэффициентЕдиницыИзмерения * ПриходнаяНакладнаяТовары.Количество КАК Количество,
						   |	ПриходнаяНакладнаяТовары.КоэффициентЕдиницыИзмерения * ПриходнаяНакладнаяТовары.Количество КАК КоличествоНоменклатуры,
       		               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
			               |	ПриходнаяНакладнаяТовары.НаборСвойств       КАК НаборСвойств
			               |ИЗ
			               |	Документ.ПриходнаяНакладная.Таблица         КАК ПриходнаяНакладнаяТовары
			               |ГДЕ
			               |	ПриходнаяНакладнаяТовары.Ссылка = &Ссылка";    
			
			Запрос.УстановитьПараметр("Ссылка",Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить().Выбрать();
			
			Движения.ОстаткиТоваровНаСкладах.Записывать = Истина;
			Движения.ПартииТоваровНаСкладах.Записывать  = Истина;
			Движения.Управленческий.Записывать          = Истина;
			
			Пока РезультатЗапроса.Следующий() Цикл
				
				Движение = Движения.ОстаткиТоваровНаСкладах.Добавить();
				ЗаполнитьЗначенияСвойств(Движение,РезультатЗапроса);
				Движение = Движения.ПартииТоваровНаСкладах.Добавить();
				ЗаполнитьЗначенияСвойств(Движение,РезультатЗапроса);
				
				Движение              = Движения.Управленческий.Добавить();
				Движение.Организация  = Организация;
				Движение.СчетДт       = ПланыСчетов.Основной.Товары;
				Движение.СчетКт       = ПланыСчетов.Основной.РасчетыСПоставщиками;
				ЗаполнитьЗначенияСвойств(Движение,РезультатЗапроса);
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура]=РезультатЗапроса.Номенклатура;
				Движение.КоличествоДт = РезультатЗапроса.Количество; 
				
			КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры


