//Вычисление СуммыДокумента перед записью
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	//Чтобы нельзя было поправить сумму документа перед записью документа
	СуммаДокумента = Услуги.Итог("Сумма") + Таблица.Итог("Сумма");
	Контрагент     = Справочники.Контрагенты.ФизическоеЛицо;
	
КонецПроцедуры

//Движения по регистрам
Процедура ОбработкаПроведения(Отказ, Режим)
	
	//1.Очистка старых движений регистра
    Движения.ПартииТоваровНаСкладах.Очистить();
    Движения.ПартииТоваровНаСкладах.Записывать = Истина;
    Движения.Записать();
    
    Движения.РезервированиеТоваров.Очистить();
    Движения.РезервированиеТоваров.Записывать = Истина;
    Движения.Записать();

	
	
	Контрагент   = Справочники.Контрагенты.ФизическоеЛицо;
	Запрос       = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Договоры.Ссылка     КАК Ссылка
	|ИЗ
	|	Справочник.Договоры КАК Договоры
	|ГДЕ
	|	Договоры.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", Контрагент);
	РезультатЗапроса      = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		 Договор          = NULL;
	Иначе
		 РезультатЗапроса = РезультатЗапроса.Выгрузить();
		 Договор          = РезультатЗапроса[0].Ссылка;
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходноКассовыйОрдерТаблица.Номенклатура                                 КАК Номенклатура,
	|	ПриходноКассовыйОрдерТаблица.НаборСвойств                                 КАК НаборСвойств,
	|	СУММА(ПриходноКассовыйОрдерТаблица.Количество * ПриходноКассовыйОрдерТаблица.КоэффициентЕдиницыИзмерения) КАК Количество,
	|	СУММА(ПриходноКассовыйОрдерТаблица.Сумма)                                 КАК Сумма
	|ПОМЕСТИТЬ ТаблицаИзПКОрдера
	|ИЗ
	|	Документ.ПриходноКассовыйОрдер.Таблица                                    КАК ПриходноКассовыйОрдерТаблица
	|ГДЕ
	|	ПриходноКассовыйОрдерТаблица.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходноКассовыйОрдерТаблица.Номенклатура,
	|	ПриходноКассовыйОрдерТаблица.НаборСвойств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладахОстатки.Организация                                 КАК Организация,
	|	ПартииТоваровНаСкладахОстатки.Склад                                       КАК Склад,
	|	РезервированиеПокупателя.Контрагент                                       КАК Контрагент,
	|	РезервированиеПокупателя.Покупатель                                       КАК Покупатель,
	|	ТаблицаИзПКОрдера.Номенклатура                                            КАК Номенклатура,
	|	ТаблицаИзПКОрдера.НаборСвойств                                            КАК НаборСвойств,
	|	ТаблицаИзПКОрдера.Количество                                              КАК Количество,
	|	ТаблицаИзПКОрдера.Сумма                                                   КАК Сумма,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0)  КАК КоличествоНоменклатурыОстаток,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.СуммаОстаток, 0)                   КАК СуммаОстаток,
	|	ЕСТЬNULL(РезервированиеПокупателя.КоличествоРезерваОстаток, 0)            КАК КоличествоЗарезервированоДляПокупателя,
	|	СУММА(ЕСТЬNULL(РезервированиеТоваровОстатки.КоличествоРезерваОстаток, 0)) КАК КоличествоРезерваЧужое,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.СуммаОстаток, 0) * ТаблицаИзПКОрдера.Количество / ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0)
	|	КОНЕЦ                                                                     КАК Себестоимость,
	|	ТаблицаИзПКОрдера.Номенклатура.ВидНоменклатуры                            КАК ВидНоменклатуры
	|ИЗ
	|	ТаблицаИзПКОрдера                                                         КАК ТаблицаИзПКОрдера
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|				&ВыбДата,
	|				Организация = &ВыбОрганизация
	|					И Склад = &ВыбСклад)                                      КАК ПартииТоваровНаСкладахОстатки
	|		ПО ТаблицаИзПКОрдера.Номенклатура = ПартииТоваровНаСкладахОстатки.Номенклатура
	|			И ТаблицаИзПКОрдера.НаборСвойств = ПартииТоваровНаСкладахОстатки.ВариантНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервированиеТоваров.Остатки(
	|				&ВыбДата,
	|				Организация = &ВыбОрганизация
	|					И Склад = &ВыбСклад
	|					И Покупатель = &ВыбПокупатель)                            КАК РезервированиеПокупателя
	|		ПО ТаблицаИзПКОрдера.Номенклатура = РезервированиеПокупателя.Номенклатура
	|			И ТаблицаИзПКОрдера.НаборСвойств = РезервированиеПокупателя.ВариантНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервированиеТоваров.Остатки(
	|				&ВыбДата,
	|				Организация = &ВыбОрганизация
	|					И Склад = &ВыбСклад
	|					И Покупатель <> &ВыбПокупатель)                           КАК РезервированиеТоваровОстатки
	|		ПО ТаблицаИзПКОрдера.Номенклатура = РезервированиеТоваровОстатки.Номенклатура
	|			И ТаблицаИзПКОрдера.НаборСвойств = РезервированиеТоваровОстатки.ВариантНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервированиеПокупателя.Контрагент,
	|	РезервированиеПокупателя.Покупатель,
	|	ПартииТоваровНаСкладахОстатки.Организация,
	|	ПартииТоваровНаСкладахОстатки.Склад,
	|	ТаблицаИзПКОрдера.Номенклатура,
	|	ТаблицаИзПКОрдера.НаборСвойств,
	|	ТаблицаИзПКОрдера.Количество,
	|	ТаблицаИзПКОрдера.Сумма,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0),
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.СуммаОстаток, 0),
	|	ЕСТЬNULL(РезервированиеПокупателя.КоличествоРезерваОстаток, 0),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.СуммаОстаток, 0) * ТаблицаИзПКОрдера.Количество / ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0)
	|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("Ссылка"                ,Ссылка );
	Запрос.УстановитьПараметр("ВыбДата"               ,Дата);
	Запрос.УстановитьПараметр("ВыбОрганизация"        ,Организация);
	Запрос.УстановитьПараметр("ВыбСклад"              ,Склад);
	Запрос.УстановитьПараметр("ВыбКонтрагент"         ,Контрагент);
	Запрос.УстановитьПараметр("ВыбПокупатель"         ,ПринятоОт);
	
	РезультатЗапросаВыборка = Запрос.Выполнить().Выбрать();
	//Выгрузить();	

	ЭтоТовар = Перечисления.ВидыНоменклатуры.Товар;
	
	// Регистр ОстаткиТоваровНаСкладах Расход
	Движения.ОстаткиТоваровНаСкладах.Записывать = Истина;
	// Регистр Бухгалтерии Управленческий
	Движения.Управленческий.Записывать          = Истина;
	// Регистр Продажи
	Движения.Продажи.Записывать                 = Истина;
	// Регистр ПартииТоваровНаСкладах Расход
	Движения.ПартииТоваровНаСкладах.Записывать  = Истина;
	// Регистр РезервированиеТоваров Расход
	Движения.РезервированиеТоваров.Записывать   = Истина;
	
	Пока РезультатЗапросаВыборка.Следующий() Цикл
		
		// Регистр Бухгалтерии Управленческий
		Движение                        = Движения.Управленческий.Добавить();
		Движение.Организация            = Организация;
		Движение.СчетДт                 = ПланыСчетов.Основной.ДебиторскаяЗадолженность;
		Движение.СчетКт                 = ПланыСчетов.Основной.Капитал;
		Движение.Период                 = Дата;
		Движение.Сумма                  = РезультатЗапросаВыборка.Сумма;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент; 
		
		// Регистр Продажи		
		Движение                        = Движения.Продажи.Добавить();
		Движение.Период                 = Дата;
		Движение.Организация            = Организация;
		Движение.Контрагент             = Контрагент;
		Движение.Договор                = Договор;
		Движение.Номенклатура           = РезультатЗапросаВыборка.Номенклатура;
		Движение.ВариантНоменклатуры    = РезультатЗапросаВыборка.НаборСвойств;
		Движение.КоличествоНоменклатуры = РезультатЗапросаВыборка.Количество;
		Движение.Сумма                  = РезультатЗапросаВыборка.Сумма;
		
		Если РезультатЗапросаВыборка.ВидНоменклатуры = ЭтоТовар Тогда
			
			Если РезультатЗапросаВыборка.Количество > РезультатЗапросаВыборка.КоличествоНоменклатурыОстаток - РезультатЗапросаВыборка.КоличествоРезерваЧужое Тогда
				
				Сообщить("Номенклатура <<"+РезультатЗапросаВыборка.Номенклатура+">> с набором свойств <<"+РезультатЗапросаВыборка.НаборСвойств+">> превышает доступный остаток на складе! В документе: "+РезультатЗапросаВыборка.Количество+"усл.ед., доступный остаток на складе: "+(РезультатЗапросаВыборка.КоличествоНоменклатурыОстаток-РезультатЗапросаВыборка.КоличествоРезерваЧужое)+" усл. ед., не хватает: "+(РезультатЗапросаВыборка.Количество-РезультатЗапросаВыборка.КоличествоНоменклатурыОстаток+РезультатЗапросаВыборка.КоличествоРезерваЧужое)+" усл.ед.");
				Отказ = Истина;
				Продолжить; //нельзя ставить Возврат; потому что ошибки могут быть в следующих строках Выборки
				//А мы должны сообщить пользователю о всех случаях нехватки номенклатуры!
			КонецЕсли;
			
			Если РезультатЗапросаВыборка.КоличествоЗарезервированоДляПокупателя > 0 Тогда
				
				Сообщить("Номенклатура <<"+РезультатЗапросаВыборка.Номенклатура+">> с набором свойств <<"+
				РезультатЗапросаВыборка.НаборСвойств+">> была зарезервирована на складе в количестве "+ 
				РезультатЗапросаВыборка.КоличествоЗарезервированоДляПокупателя+"усл.ед. для выбранного покупателя << "+ 
				РезультатЗапросаВыборка.Покупатель+">>.");
				
				// Регистр РезервированиеТоваров Расход
				Движение                        = Движения.РезервированиеТоваров.Добавить();
				Движение.ВидДвижения            = ВидДвиженияНакопления.Расход;
				Движение.Период                 = Дата;
				Движение.Организация            = Организация;
				Движение.Склад                  = Склад;
				Движение.Контрагент             = Контрагент;
				Движение.Покупатель             = РезультатЗапросаВыборка.Покупатель;	
				Движение.Номенклатура           = РезультатЗапросаВыборка.Номенклатура;
				Движение.ВариантНоменклатуры    = РезультатЗапросаВыборка.НаборСвойств;
				Если РезультатЗапросаВыборка.Количество > РезультатЗапросаВыборка.КоличествоЗарезервированоДляПокупателя Тогда
					Движение.КоличествоРезерва  = РезультатЗапросаВыборка.КоличествоЗарезервированоДляПокупателя;	
				Иначе 
					Движение.КоличествоРезерва  = РезультатЗапросаВыборка.Количество;	
				КонецЕсли;
				
			КонецЕсли;
			
			// Регистр ПартииТоваровНаСкладах Расход	
			Движение                        = Движения.ПартииТоваровНаСкладах.Добавить();
			Движение.ВидДвижения            = ВидДвиженияНакопления.Расход;
			Движение.Период                 = Дата;
			Движение.Организация            = Организация;
			Движение.Склад                  = Склад;
			Движение.Номенклатура           = РезультатЗапросаВыборка.Номенклатура;
			Движение.ВариантНоменклатуры    = РезультатЗапросаВыборка.НаборСвойств;
			Движение.КоличествоНоменклатуры = РезультатЗапросаВыборка.Количество;
			Движение.Сумма                  = РезультатЗапросаВыборка.Себестоимость;
			
			// Регистр Бухгалтерии Управленческий
			Движение                        = Движения.Управленческий.Добавить();
			Движение.Организация            = Организация;
			Движение.СчетДт                 = ПланыСчетов.Основной.Капитал;
			Движение.СчетКт                 = ПланыСчетов.Основной.Товары;
			Движение.Период                 = Дата;
			Движение.Сумма                  = РезультатЗапросаВыборка.Себестоимость; 
			Движение.КоличествоКт           = РезультатЗапросаВыборка.Количество;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = РезультатЗапросаВыборка.Номенклатура;
			
			// Регистр ОстаткиТоваровНаСкладах Расход
			Движение                        = Движения.ОстаткиТоваровНаСкладах.Добавить();
			Движение.ВидДвижения            = ВидДвиженияНакопления.Расход;
			Движение.Период                 = Дата;
			Движение.Организация            = Организация;
			Движение.Склад                  = Склад;
			Движение.Номенклатура           = РезультатЗапросаВыборка.Номенклатура;
			Движение.ВариантНоменклатуры    = РезультатЗапросаВыборка.НаборСвойств;
			Движение.Количество             = РезультатЗапросаВыборка.Количество;
			
		
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос       = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.ВидНоменклатуры                   КАК ВидНоменклатуры,
	|	ПриходноКассовыйОрдерУслуги.НаименованиеУслуги КАК НаименованиеУслуги,
	|	ПриходноКассовыйОрдерУслуги.НаборСвойств       КАК НаборСвойств,
	|	(СЕКУНДА(ПриходноКассовыйОрдерУслуги.ДлительностьОказанияУслуги) + МИНУТА(ПриходноКассовыйОрдерУслуги.ДлительностьОказанияУслуги) * 60 + ЧАС(ПриходноКассовыйОрдерУслуги.ДлительностьОказанияУслуги) * 60 * 60) / (60 * 60) КАК ДлительностьОказанияУслуги,
	|	ПриходноКассовыйОрдерУслуги.Сумма              КАК Сумма
	|ИЗ
	|	Документ.ПриходноКассовыйОрдер.Услуги          КАК ПриходноКассовыйОрдерУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура   КАК Номенклатура
	|		ПО ПриходноКассовыйОрдерУслуги.НаименованиеУслуги = Номенклатура.Ссылка
	|ГДЕ
	|	ПриходноКассовыйОрдерУслуги.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапросаВыборка = Запрос.Выполнить().Выбрать();
	
	
	Пока РезультатЗапросаВыборка.Следующий() Цикл	

		
		Если РезультатЗапросаВыборка.ВидНоменклатуры = ЭтоТовар Тогда
			Сообщить("Номенклатура <<"+РезультатЗапросаВыборка.НаименованиеУслуги+
			         ">> это товар! В данной таблице <<Услуги>> нужно вводить услуги,"+
			         " которые оплачиваются по времени."+
					 "Для ввода товаров перейдите в другую вкладку.");
			Отказ    = Истина;
			Продолжить;		
		КонецЕсли;	
		
		Движение                        = Движения.Управленческий.Добавить();
		Движение.Организация            = Организация;
		Движение.СчетДт                 = ПланыСчетов.Основной.ДебиторскаяЗадолженность;
		Движение.СчетКт                 = ПланыСчетов.Основной.Капитал;
		Движение.Период                 = Дата;
		Движение.Сумма                  = РезультатЗапросаВыборка.Сумма;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;

		
		Движение                        = Движения.Продажи.Добавить();
		Движение.Период                 = Дата;
		Движение.Организация            = Организация;
		Движение.Контрагент             = Контрагент;
		Движение.Договор                = Договор;
		Движение.Номенклатура           = РезультатЗапросаВыборка.НаименованиеУслуги;
		Движение.ВариантНоменклатуры    = РезультатЗапросаВыборка.НаборСвойств;
		Движение.КоличествоНоменклатуры = РезультатЗапросаВыборка.ДлительностьОказанияУслуги;
		Движение.Сумма                  = РезультатЗапросаВыборка.Сумма;
		
	КонецЦикла;
	
	Если Не Отказ Тогда
		
		Если ТипЗнч(ОбъектОснование) = Тип("ДокументСсылка.РезервированиеТовара") Тогда
			Если ОбъектОснование.СтатусРезерва = Перечисления.СтатусыРезерва.Действующий Тогда
											
				ДокОбъект                    = ОбъектОснование.ПолучитьОбъект();
				ДокОбъект.СтатусРезерва      = Перечисления.СтатусыРезерва.Реализованный;
				ДокОбъект.ДокументРеализации = Ссылка;
				ДокОбъект.Записать();
				
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//Ввод на основании справочника Покупатели
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Покупатели") Тогда	
		
		// Заполнение шапки
		ПринятоОт       = ДанныеЗаполнения.Ссылка;
		ОбъектОснование = ДанныеЗаполнения;
		
		Сообщение       = Новый СообщениеПользователю();
		Сообщение.Текст = "Поле  <<ПринятоОт>> заполнено: <<" + ДанныеЗаполнения.Ссылка + ">> ";
		Сообщение.Поле  = "ПринятоОт";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
	Иначе
		Если ТипЗнч(ДанныеЗаполнения)     = Тип("ДокументСсылка.РезервированиеТовара") Тогда
			Если ДанныеЗаполнения.СтатусРезерва = Перечисления.СтатусыРезерва.Действующий Тогда
				
				// Заполнение шапки
				ОбъектОснование = ДанныеЗаполнения;
				//ВидЦен          = ДанныеЗаполнения.ВидЦен;
				//Договор         = ДанныеЗаполнения.Договор;
				Комментарий     = "Приходно-кассовый ордер на основе резерва";
				//Контрагент      = ДанныеЗаполнения.Контрагент;
				Организация     = ДанныеЗаполнения.Организация;
				ПринятоОт       = ДанныеЗаполнения.Покупатель;
				Склад           = ДанныеЗаполнения.Склад;
				//СтатусРезерва   = ДанныеЗаполнения.СтатусРезерва;
				СуммаДокумента  = ДанныеЗаполнения.СуммаДокумента;
				Для Каждого ТекСтрокаТаблица Из ДанныеЗаполнения.Таблица Цикл
					НоваяСтрока                             = Таблица.Добавить();
					НоваяСтрока.ЕдИзм                       = ТекСтрокаТаблица.ЕдиницыИзмерения;
					НоваяСтрока.Количество                  = ТекСтрокаТаблица.Количество;
					НоваяСтрока.КоэффициентЕдиницыИзмерения = ТекСтрокаТаблица.КоэффициентЕдиницыИзмерения;
					НоваяСтрока.НаборСвойств                = ТекСтрокаТаблица.НаборСвойств;
					НоваяСтрока.Номенклатура                = ТекСтрокаТаблица.Номенклатура;
					НоваяСтрока.Сумма                       = ТекСтрокаТаблица.Сумма;
					НоваяСтрока.Цена                        = ТекСтрокаТаблица.Цена;
				КонецЦикла;
			
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

















