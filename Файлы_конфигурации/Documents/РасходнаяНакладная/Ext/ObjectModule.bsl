//Вычисление СуммыДокумента перед записью
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Чтобы нельзя было поправить сумму документа перед записью документа
	СуммаДокумента = Таблица.Итог("Сумма");
	
КонецПроцедуры

//Движения по регистрам
Процедура ОбработкаПроведения(Отказ, Режим)
	
	//1.Очистка старых движений регистра
    Движения.ПартииТоваровНаСкладах.Очистить();
    Движения.ПартииТоваровНаСкладах.Записывать = Истина;
    Движения.Записать();
    
    Движения.РезервированиеТоваров.Очистить();
    Движения.РезервированиеТоваров.Записывать = Истина;
    Движения.Записать();
	

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяТаблица.Номенклатура                 КАК Номенклатура,
	|	РасходнаяНакладнаяТаблица.НаборСвойств                 КАК НаборСвойств,
	|	СУММА(РасходнаяНакладнаяТаблица.Количество * РасходнаяНакладнаяТаблица.КоэффициентЕдиницыИзмерения) КАК Количество,
	|	СУММА(РасходнаяНакладнаяТаблица.Сумма)                 КАК Сумма,
	|	РасходнаяНакладнаяТаблица.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТаблицаИзРасходнойНакладной
	|ИЗ
	|	Документ.РасходнаяНакладная.Таблица                    КАК РасходнаяНакладнаяТаблица
	|ГДЕ
	|	РасходнаяНакладнаяТаблица.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяТаблица.Номенклатура,
	|	РасходнаяНакладнаяТаблица.НаборСвойств,
	|	РасходнаяНакладнаяТаблица.Номенклатура.ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИзРасходнойНакладной.Номенклатура                                  КАК Номенклатура,
	|	ТаблицаИзРасходнойНакладной.НаборСвойств                                  КАК НаборСвойств,
	|	ТаблицаИзРасходнойНакладной.Количество                                    КАК Количество,
	|	ТаблицаИзРасходнойНакладной.Сумма                                         КАК Сумма,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0)  КАК КоличествоНоменклатурыОстаток,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.СуммаОстаток, 0)                   КАК СуммаОстаток,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.СуммаОстаток, 0) * ТаблицаИзРасходнойНакладной.Количество / ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0)
	|	КОНЕЦ                                                                     КАК Себестоимость,
	|	ТаблицаИзРасходнойНакладной.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ЕСТЬNULL(РезервированиеКонтрагента.КоличествоРезерваОстаток, 0)           КАК КоличествоЗарезервированоДляКонтрагента,
	|	СУММА(ЕСТЬNULL(РезервированиеТоваровОстатки.КоличествоРезерваОстаток, 0)) КАК КоличествоРезерваЧужое
	|ИЗ
	|	ТаблицаИзРасходнойНакладной                                               КАК ТаблицаИзРасходнойНакладной
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|				&ВыбДата,
	|				Организация = &ВыбОрганизация
	|					И Склад = &ВыбСклад)                                      КАК ПартииТоваровНаСкладахОстатки
	|		ПО ТаблицаИзРасходнойНакладной.Номенклатура = ПартииТоваровНаСкладахОстатки.Номенклатура
	|			И ТаблицаИзРасходнойНакладной.НаборСвойств = ПартииТоваровНаСкладахОстатки.ВариантНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервированиеТоваров.Остатки(
	|				&ВыбДата,
	|				Организация = &ВыбОрганизация
	|					И Склад = &ВыбСклад
	|					И Контрагент = &ВыбКонтрагент)                            КАК РезервированиеКонтрагента
	|		ПО ТаблицаИзРасходнойНакладной.Номенклатура = РезервированиеКонтрагента.Номенклатура
	|			И ТаблицаИзРасходнойНакладной.НаборСвойств = РезервированиеКонтрагента.ВариантНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервированиеТоваров.Остатки(
	|				&ВыбДата,
	|				Организация = &ВыбОрганизация
	|					И Склад = &ВыбСклад
	|					И Контрагент <> &ВыбКонтрагент)                           КАК РезервированиеТоваровОстатки
	|		ПО ТаблицаИзРасходнойНакладной.Номенклатура = РезервированиеТоваровОстатки.Номенклатура
	|			И ТаблицаИзРасходнойНакладной.НаборСвойств = РезервированиеТоваровОстатки.ВариантНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзРасходнойНакладной.Номенклатура,
	|	ТаблицаИзРасходнойНакладной.НаборСвойств,
	|	ТаблицаИзРасходнойНакладной.Количество,
	|	ТаблицаИзРасходнойНакладной.Сумма,
	|	ТаблицаИзРасходнойНакладной.ВидНоменклатуры,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0),
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.СуммаОстаток, 0),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.СуммаОстаток, 0) * ТаблицаИзРасходнойНакладной.Количество / ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0)
	|	КОНЕЦ,
	|	ЕСТЬNULL(РезервированиеКонтрагента.КоличествоРезерваОстаток, 0)";
	
	Запрос.УстановитьПараметр("Ссылка"                ,Ссылка );
	Запрос.УстановитьПараметр("ВыбДата"               ,Дата);
	Запрос.УстановитьПараметр("ВыбОрганизация"        ,Организация);
	Запрос.УстановитьПараметр("ВыбСклад"              ,Склад);
	Запрос.УстановитьПараметр("ВыбКонтрагент"         ,Контрагент);
	РезультатЗапросаВыборка = Запрос.Выполнить().Выбрать();
	
	
    // Регистр ОстаткиТоваровНаСкладах Расход
	Движения.ОстаткиТоваровНаСкладах.Записывать = Истина;
	// Регистр Бухгалтерии Управленческий
	Движения.Управленческий.Записывать          = Истина;
	// Регистр Продажи
	Движения.Продажи.Записывать                 = Истина;
	// Регистр ПартииТоваровНаСкладах Расход
	Движения.ПартииТоваровНаСкладах.Записывать  = Истина;
	
	Движения.РезервированиеТоваров.Записывать   = Истина;
	
	ЭтоТовар = Перечисления.ВидыНоменклатуры.Товар;
	
	Пока РезультатЗапросаВыборка.Следующий() Цикл
		
		// Регистр Бухгалтерии Управленческий
		Движение                        = Движения.Управленческий.Добавить();
		Движение.Организация            = Организация;
		Движение.СчетДт                 = ПланыСчетов.Основной.ДебиторскаяЗадолженность;
		Движение.СчетКт                 = ПланыСчетов.Основной.Капитал;
		Движение.Период                 = Дата;
		Движение.Сумма                  = РезультатЗапросаВыборка.Сумма;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент; 
		
		// Регистр Продажи		
		Движение                        = Движения.Продажи.Добавить();
		Движение.Период                 = Дата;
		Движение.Организация            = Организация;
		Движение.Контрагент             = Контрагент;
		Движение.Договор                = Договор;
		Движение.Номенклатура           = РезультатЗапросаВыборка.Номенклатура;
		Движение.ВариантНоменклатуры    = РезультатЗапросаВыборка.НаборСвойств;
		Движение.КоличествоНоменклатуры = РезультатЗапросаВыборка.Количество;
		Движение.Сумма                  = РезультатЗапросаВыборка.Сумма;
		
		Если РезультатЗапросаВыборка.ВидНоменклатуры = ЭтоТовар Тогда
			
			Если РезультатЗапросаВыборка.Количество > РезультатЗапросаВыборка.КоличествоНоменклатурыОстаток - РезультатЗапросаВыборка.КоличествоРезерваЧужое Тогда
				
				Сообщить("Номенклатура <<"+Строка(РезультатЗапросаВыборка.Номенклатура)+">> с набором свойств <<"+
				Строка(РезультатЗапросаВыборка.НаборСвойств)+">> превышает остаток на складе! В документе: "+
				Строка(РезультатЗапросаВыборка.Количество)+"усл.ед., остаток на складе: "+
				Строка(РезультатЗапросаВыборка.КоличествоНоменклатурыОстаток-РезультатЗапросаВыборка.КоличествоРезерваЧужое)+
				" усл. ед., не хватает: "+
				Строка((РезультатЗапросаВыборка.Количество - (РезультатЗапросаВыборка.КоличествоНоменклатурыОстаток - РезультатЗапросаВыборка.КоличествоРезерваЧужое)))+
				" усл.ед.");
				Отказ = Истина;
				Продолжить; //нельзя ставить Возврат; потому что ошибки могут быть в следующих строках Выборки
				//А мы должны сообщить пользователю о всех случаях нехватки номенклатуры!
			КонецЕсли;
			
			Если РезультатЗапросаВыборка.КоличествоЗарезервированоДляКонтрагента > 0 Тогда
				
				Сообщить("Номенклатура <<"+Строка(РезультатЗапросаВыборка.Номенклатура)+">> с набором свойств <<"+
				Строка(РезультатЗапросаВыборка.НаборСвойств)+">> была зарезервирована на складе в количестве "+
				Строка(РезультатЗапросаВыборка.КоличествоЗарезервированоДляКонтрагента)+"усл.ед. для выбранного контрагента << "+
				Строка(Контрагент)+">>.");
				
				// Регистр РезервированиеТоваров Расход
				Движение                        = Движения.РезервированиеТоваров.Добавить();
				Движение.ВидДвижения            = ВидДвиженияНакопления.Расход;
				Движение.Период                 = Дата;
				Движение.Организация            = Организация;
				Движение.Склад                  = Склад;
				Движение.Контрагент             = Контрагент;
				Движение.Покупатель             = Неопределено;	
				Движение.Номенклатура           = РезультатЗапросаВыборка.Номенклатура;
				Движение.ВариантНоменклатуры    = РезультатЗапросаВыборка.НаборСвойств;
				Если РезультатЗапросаВыборка.Количество > РезультатЗапросаВыборка.КоличествоЗарезервированоДляКонтрагента Тогда
					Движение.КоличествоРезерва  = РезультатЗапросаВыборка.КоличествоЗарезервированоДляКонтрагента;	
				Иначе 
					Движение.КоличествоРезерва  = РезультатЗапросаВыборка.Количество;	
				КонецЕсли;
				
			КонецЕсли;
			
			// Регистр ПартииТоваровНаСкладах Расход	
			Движение                        = Движения.ПартииТоваровНаСкладах.Добавить();
			Движение.ВидДвижения            = ВидДвиженияНакопления.Расход;
			Движение.Период                 = Дата;
			Движение.Организация            = Организация;
			Движение.Склад                  = Склад;
			Движение.Номенклатура           = РезультатЗапросаВыборка.Номенклатура;
			Движение.ВариантНоменклатуры    = РезультатЗапросаВыборка.НаборСвойств;
			Движение.КоличествоНоменклатуры = РезультатЗапросаВыборка.Количество;
			Движение.Сумма                  = РезультатЗапросаВыборка.Себестоимость;
			
			// Регистр Бухгалтерии Управленческий
			Движение                        = Движения.Управленческий.Добавить();
			Движение.Организация            = Организация;
			Движение.СчетДт                 = ПланыСчетов.Основной.Капитал;
			Движение.СчетКт                 = ПланыСчетов.Основной.Товары;
			Движение.Период                 = Дата;
			Движение.Сумма                  = РезультатЗапросаВыборка.Себестоимость; 
			Движение.КоличествоКт           = РезультатЗапросаВыборка.Количество;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = РезультатЗапросаВыборка.Номенклатура;
			
			// Регистр ОстаткиТоваровНаСкладах Расход
			Движение                        = Движения.ОстаткиТоваровНаСкладах.Добавить();
			Движение.ВидДвижения            = ВидДвиженияНакопления.Расход;
			Движение.Период                 = Дата;
			Движение.Организация            = Организация;
			Движение.Склад                  = Склад;
			Движение.Номенклатура           = РезультатЗапросаВыборка.Номенклатура;
			Движение.ВариантНоменклатуры    = РезультатЗапросаВыборка.НаборСвойств;
			Движение.Количество             = РезультатЗапросаВыборка.Количество;
			
			
			
		КонецЕсли; //Конец Если РезультатЗапросаВыборка.ВидНоменклатуры = ЭтоТовар Тогда
		
	КонецЦикла;
	
	Если Не Отказ Тогда
		
		Если ТипЗнч(ОбъектОснование) = Тип("ДокументСсылка.РезервированиеТовара") Тогда
			Если ОбъектОснование.СтатусРезерва = Перечисления.СтатусыРезерва.Действующий Тогда
											
				ДокОбъект                    = ОбъектОснование.ПолучитьОбъект();
				ДокОбъект.СтатусРезерва      = Перечисления.СтатусыРезерва.Реализованный;
				ДокОбъект.ДокументРеализации = Ссылка;
				ДокОбъект.Записать();
				
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

//Проверяем заполнены ЕдиницыИзмерения у номенклатуры
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Удаляем из проверяемых реквизитов Единицы измерения
	//ПроверяемыеРеквизиты это массив. У массива есть методы Найти() и Удалить().
	Индекс = ПроверяемыеРеквизиты.Найти("Таблица.ЕдиницыИзмерения");
	Если Индекс <> Неопределено Тогда
		ПроверяемыеРеквизиты.Удалить(Индекс);
	КонецЕсли;
	
	// Обходим строки и проверяем заполнение реквизита
	Для Индекс = 0 по Таблица.Количество()-1 Цикл
		
		СтрокаТаблицы       = Таблица.Получить(Индекс);
		
		Если СтрокаТаблицы.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Услуга
			И Не ЗначениеЗаполнено(СтрокаТаблицы.ЕдиницыИзмерения) Тогда
			
			Сообщение       = Новый СообщениеПользователю();
			Сообщение.Текст = "В строке " + (Индекс+1) + " не заполнено значение единицы измерения";
			Сообщение.Поле  = "Таблица[" + Индекс + "].ЕдиницыИзмерения";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ           = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//Ввод на основании справочника Контрагенты и документа Резервирование Товара
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Если ДанныеЗаполнения.ЭтоГруппа Тогда
			
			Сообщение       = Новый СообщениеПользователю();
			Сообщение.Текст = "Поле  <<Контрагент>> не заполнено. Была выбрана Группа <<" + ДанныеЗаполнения.Ссылка + ">>, а не конкретный продавец!";
			Сообщение.Поле  = "Контрагент";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			
		ИначеЕсли ДанныеЗаполнения.ВидКонтрагента = Перечисления.ВидыКонтрагентов.Продавец Тогда	
			
			Сообщение       = Новый СообщениеПользователю();
			Сообщение.Текст = "Поле  <<Контрагент>> не заполнено. Выбранный контрагент <<" + ДанныеЗаполнения.Ссылка + ">> является Продавцом, а не Покупателем!";
			Сообщение.Поле  = "Контрагент";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			
		Иначе
			
			// Заполнение шапки
			Контрагент      = ДанныеЗаполнения.Ссылка;
			ОбъектОснование = ДанныеЗаполнения.Ссылка;
			
			Сообщение       = Новый СообщениеПользователю();
			Сообщение.Текст = "Поле  <<Контрагент>> заполнено: <<" + ДанныеЗаполнения.Ссылка + ">> ";
			Сообщение.Поле  = "Контрагент";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		КонецЕсли;
		Иначе Если ТипЗнч(ДанныеЗаполнения)     = Тип("ДокументСсылка.РезервированиеТовара") Тогда
			
			Если ДанныеЗаполнения.СтатусРезерва = Перечисления.СтатусыРезерва.Действующий Тогда
				
				// Заполнение шапки
				ОбъектОснование = ДанныеЗаполнения;
				ВидЦен          = ДанныеЗаполнения.ВидЦен;
				Договор         = ДанныеЗаполнения.Договор;
				Комментарий     = "Расходная накладная на основе резерва";
				Контрагент      = ДанныеЗаполнения.Контрагент;
				Организация     = ДанныеЗаполнения.Организация;
				Покупатель      = ДанныеЗаполнения.Покупатель;
				Склад           = ДанныеЗаполнения.Склад;
				//СтатусРезерва   = ДанныеЗаполнения.СтатусРезерва;
				СуммаДокумента  = ДанныеЗаполнения.СуммаДокумента;
				Для Каждого ТекСтрокаТаблица Из ДанныеЗаполнения.Таблица Цикл
					НоваяСтрока                             = Таблица.Добавить();
					НоваяСтрока.ЕдиницыИзмерения            = ТекСтрокаТаблица.ЕдиницыИзмерения;
					НоваяСтрока.Количество                  = ТекСтрокаТаблица.Количество;
					НоваяСтрока.КоэффициентЕдиницыИзмерения = ТекСтрокаТаблица.КоэффициентЕдиницыИзмерения;
					НоваяСтрока.НаборСвойств                = ТекСтрокаТаблица.НаборСвойств;
					НоваяСтрока.Номенклатура                = ТекСтрокаТаблица.Номенклатура;
					НоваяСтрока.Сумма                       = ТекСтрокаТаблица.Сумма;
					НоваяСтрока.Цена                        = ТекСтрокаТаблица.Цена;
				КонецЦикла;
				
				
			КонецЕсли;
			
			
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры



