//Вычисление СуммыДокумента перед записью
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Чтобы нельзя было поправить сумму документа перед записью документа
	СуммаДокумента = Таблица.Итог("Сумма");
	
	
КонецПроцедуры

//Движения по регистрам
Процедура ОбработкаПроведения(Отказ, Режим)
	
	////1.Очистка старых движений регистра
	Движения.РезервированиеТоваров.Очистить();
    Движения.РезервированиеТоваров.Записывать = Истина;
    Движения.Записать();
	
	Запрос       = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеТовараТаблица.Номенклатура                                 КАК Номенклатура,
	|	РезервированиеТовараТаблица.НаборСвойств                                 КАК ВариантНоменклатуры,
	|	СУММА(РезервированиеТовараТаблица.Количество * РезервированиеТовараТаблица.КоэффициентЕдиницыИзмерения) КАК Количество,
	|	РезервированиеТовараТаблица.Номенклатура.ВидНоменклатуры                 КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ХотимЗарезервироватьЭтуНоменклатуру
	|ИЗ
	|	Документ.РезервированиеТовара.Таблица                                    КАК РезервированиеТовараТаблица
	|ГДЕ
	|	РезервированиеТовараТаблица.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервированиеТовараТаблица.Номенклатура,
	|	РезервированиеТовараТаблица.НаборСвойств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХотимЗарезервироватьЭтуНоменклатуру.Номенклатура                         КАК Номенклатура,
	|	ХотимЗарезервироватьЭтуНоменклатуру.ВариантНоменклатуры                  КАК ВариантНоменклатуры,
	|	ХотимЗарезервироватьЭтуНоменклатуру.Количество                           КАК Количество,
	|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоНоменклатурыОстаток, 0) КАК КоличествоНоменклатурыОстаток,
	|	ЕСТЬNULL(РезервированиеТоваровОстатки.КоличествоРезерваОстаток, 0)       КАК КоличествоНоменклатурыРезерв,
	|	ПартииТоваровНаСкладахОстатки.Организация                                КАК Организация,
	|	ПартииТоваровНаСкладахОстатки.Склад                                      КАК Склад,
	|	ХотимЗарезервироватьЭтуНоменклатуру.ВидНоменклатуры                      КАК ВидНоменклатуры
	|ИЗ
	|	ХотимЗарезервироватьЭтуНоменклатуру                                      КАК ХотимЗарезервироватьЭтуНоменклатуру
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|				&ТекДата,
	|				Организация = &ТекОрганизация
	|					И Склад = &ТекСклад)                                     КАК ПартииТоваровНаСкладахОстатки
	|		ПО ХотимЗарезервироватьЭтуНоменклатуру.Номенклатура = ПартииТоваровНаСкладахОстатки.Номенклатура
	|			И ХотимЗарезервироватьЭтуНоменклатуру.ВариантНоменклатуры = ПартииТоваровНаСкладахОстатки.ВариантНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервированиеТоваров.Остатки(
	|				&ТекДата,
	|				Организация = &ТекОрганизация
	|					И Склад = &ТекСклад)                                     КАК РезервированиеТоваровОстатки
	|		ПО ХотимЗарезервироватьЭтуНоменклатуру.Номенклатура = РезервированиеТоваровОстатки.Номенклатура
	|			И ХотимЗарезервироватьЭтуНоменклатуру.ВариантНоменклатуры = РезервированиеТоваровОстатки.ВариантНоменклатуры";
	Запрос.УстановитьПараметр("Ссылка",         Ссылка);
	Запрос.УстановитьПараметр("ТекДата",        Дата);
	Запрос.УстановитьПараметр("ТекОрганизация", Организация);
	Запрос.УстановитьПараметр("ТекСклад",       Склад);
	РезультатЗапроса       = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	// Регистр РезервированиеТоваров Приход
	Движения.РезервированиеТоваров.Записывать = Истина;
	
	ЭтоТовар=Перечисления.ВидыНоменклатуры.Товар;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.ВидНоменклатуры = ЭтоТовар Тогда
			
			Остаток     = ВыборкаДетальныеЗаписи.КоличествоНоменклатурыОстаток;
			Резерв      = ВыборкаДетальныеЗаписи.КоличествоНоменклатурыРезерв;
			Затребовано = ВыборкаДетальныеЗаписи.Количество;
			Дефицит     = Остаток - Резерв - Затребовано;
			
			Если Дефицит < 0 Тогда
				
				Сообщить("Номенклатура <<"+ВыборкаДетальныеЗаписи.Номенклатура+">> с набором свойств <<"+ВыборкаДетальныеЗаписи.ВариантНоменклатуры+">> превышает остаток на складе! В документе: "+ВыборкаДетальныеЗаписи.Количество+"усл.ед., остаток на складе: "+(ВыборкаДетальныеЗаписи.КоличествоНоменклатурыОстаток-ВыборкаДетальныеЗаписи.КоличествоНоменклатурыРезерв)+" усл. ед., не хватает: "+(ВыборкаДетальныеЗаписи.Количество-ВыборкаДетальныеЗаписи.КоличествоНоменклатурыОстаток-ВыборкаДетальныеЗаписи.КоличествоНоменклатурыРезерв)+" усл.ед.");
				Отказ = Истина;
				Продолжить; //нельзя ставить Возврат; потому что ошибки могут быть в следующих строках Выборки
				
			КонецЕсли;
			Движение                        = Движения.РезервированиеТоваров.Добавить();
			Движение.ВидДвижения            = ВидДвиженияНакопления.Приход;
			Движение.Период                 = Дата;
			Движение.Организация            = Организация;
			Движение.Склад                  = Склад;
			Движение.Контрагент             = Контрагент;
			Движение.Покупатель             = Покупатель;	
			Движение.Номенклатура           = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.ВариантНоменклатуры    = ВыборкаДетальныеЗаписи.ВариантНоменклатуры;
			Движение.КоличествоРезерва      = ВыборкаДетальныеЗаписи.Количество;
			//		Движение.Сумма                  = РезультатЗапросаВыборка.Себестоимость;
		Иначе
			
		 	Сообщить("Номенклатура <<"+ВыборкаДетальныеЗаписи.Номенклатура+">> с набором свойств <<"+ВыборкаДетальныеЗаписи.ВариантНоменклатуры+">> не является товаром!");
			
		КонецЕсли;

		
		
	КонецЦикла;
	
	
  
КонецПроцедуры

//Проверяем заполнены ЕдиницыИзмерения у номенклатуры
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Удаляем из проверяемых реквизитов Единицы измерения
	//ПроверяемыеРеквизиты это массив. У массива есть методы Найти() и Удалить().
	Индекс = ПроверяемыеРеквизиты.Найти("Таблица.ЕдиницыИзмерения");
	Если Индекс <> Неопределено Тогда
		ПроверяемыеРеквизиты.Удалить(Индекс);
	КонецЕсли;
	
	// Обходим строки и проверяем заполнение реквизита
	Для Индекс = 0 по Таблица.Количество()-1 Цикл
		
		СтрокаТаблицы       = Таблица.Получить(Индекс);
		
		Если СтрокаТаблицы.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Услуга
			И Не ЗначениеЗаполнено(СтрокаТаблицы.ЕдиницыИзмерения) Тогда
			
			Сообщение       = Новый СообщениеПользователю();
			Сообщение.Текст = "В строке " + (Индекс+1) + " не заполнено значение единицы измерения";
			Сообщение.Поле  = "Таблица[" + Индекс + "].ЕдиницыИзмерения";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ           = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//Ввод на основании справочника Контрагенты и Покупатели
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ДанныеЗаполнения = Неопределено Тогда
		 Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Контрагенты") Тогда

		Если ДанныеЗаполнения.ЭтоГруппа Тогда
			
			Сообщение       = Новый СообщениеПользователю();
			Сообщение.Текст = "Поле  <<Контрагент>> не заполнено. Была выбрана Группа <<" + ДанныеЗаполнения.Ссылка + ">>, а не конкретный продавец!";
			Сообщение.Поле  = "Контрагент";
			Сообщение.УстановитьДанные(ЭтотОбъект); 
			Сообщение.Сообщить();
			
		ИначеЕсли ДанныеЗаполнения.ВидКонтрагента = Перечисления.ВидыКонтрагентов.Продавец Тогда	
			
			Сообщение       = Новый СообщениеПользователю();
			Сообщение.Текст = "Поле  <<Контрагент>> не заполнено. Выбранный контрагент <<" + ДанныеЗаполнения.Ссылка + ">> является Продавцом, а не Покупателем!";
			Сообщение.Поле  = "Контрагент";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			
        Иначе
			
			// Заполнение шапки
		    Контрагент      = ДанныеЗаполнения.Ссылка;
			ОбъектОснование = ДанныеЗаполнения.Ссылка;
		
			Сообщение       = Новый СообщениеПользователю();
			Сообщение.Текст = "Поле  <<Контрагент>> заполнено: <<" + ДанныеЗаполнения.Ссылка + ">> ";
			Сообщение.Поле  = "Контрагент";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
        КонецЕсли;
		
	Иначе Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Покупатели") Тогда
		    // Заполнение шапки
			Покупатель      = ДанныеЗаполнения;
			ОбъектОснование = ДанныеЗаполнения;
			Контрагент      = Справочники.Контрагенты.ФизическоеЛицо;
		
			Сообщение       = Новый СообщениеПользователю();
			Сообщение.Текст = "Поле  <<Покупатель>> заполнено: <<" + ДанныеЗаполнения.Ссылка + ">> ";
			Сообщение.Поле  = "Покупатель";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		
		
		  КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры



